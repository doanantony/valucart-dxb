<?php

namespace App\OAuth;

use Laravel\Passport\Bridge\Client;
use Laravel\Passport\Bridge\ClientRepository;

class ClientRepositoryOverride extends ClientRepository
{

    /**
     * {@inheritdoc}
     */
    public function getClientEntity(
        $clientIdentifier,
        $grantType = null,
        $clientSecret = null,
        $mustValidateSecret = true
    ) {

        // First, we will verify that the client exists and is authorized to create personal
        // access tokens. Generally personal access tokens are only generated by the user
        // from the main interface. We'll only let certain clients generate the tokens.
        $record = $this->clients->findActive($clientIdentifier);

        if (! $record || ! $this->handlesGrant($record, $grantType)) {
            return;
        }

        // Once we have an existing client record we will create this actual client instance
        // and verify the secret if necessary. If the secret is valid we will be ready to
        // return this client instance back out to the consuming methods and finish up.
        $client = new Client(
            $clientIdentifier, $record->name, $record->redirect
        );

        // if ($mustValidateSecret &&
        //     ! hash_equals($record->secret, (string) $clientSecret)) {
        //     return;
        // }

        return $client;

    }
    
}
